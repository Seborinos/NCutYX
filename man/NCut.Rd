% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NCutYX.R
\name{NCut}
\alias{NCut}
\title{Cluster the columns of Y into K groups.}
\usage{
NCut(Y, K = 2, B = 3000, L = 1000, dist = "gaussian", sigma = 1)
}
\arguments{
\item{Y}{is a n x p matrix of p variables and n observations. The columns of
Y will be clustered into K groups.}

\item{B}{is the number of iterations in the simulated annealing algorithm.}

\item{L}{is the temperature coefficient in the simulated annealing algorithm.}
}
\value{
A list with the final value of the objective function,
the clusters and the lambda penalty chosen through cross-validation.
}
\description{
This function will output K clusters of  the columns of Y.
}
\details{
The algorithm minimizes a modified version of NCut through simulated annealing.
The clusters correspond to partitions that minimize this objective function.
The external information of X is incorporated by using ridge regression to predict Y.
}
\examples{
#This sets up the initial parameters for the simulation.
n=200 #Sample size
B=5000 #Number of iterations in the simulated annealing algorithm.
L=1000 #Temperature coefficient.
p=500 #Number of columns of Y.
h1=0
h2=0.15

S=matrix(0.2,p,p)
S[1:(p/2),(p/2+1):p]=0
S[(p/2+1):p,1:(p/2)]=0
S=S-diag(diag(S))+diag(p)
S=nearPD(S)
S=S$mat
mu=rep(0,p)

W0=matrix(1,p,p)
W0[1:(p/2),1:(p/2)]=0
W0[(p/2+1):p,(p/2+1):p]=0
Denum=sum(W0)

Y=mvrnorm(n, mu, S)
#Our method
Res=NCutY2R1(Y,B,L)
Cx=Res[[2]]
f11=matrix(Cx[,1],p,1)
f12=matrix(Cx[,2],p,1)

errorL=sum((f11\%*\%t(f11))*W0)/Denum+sum((f12\%*\%t(f12))*W0)/Denum
#This is the true error of the clustering solution.
errorL
}
