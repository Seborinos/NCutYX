% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NCutYX.R
\name{spawn2}
\alias{spawn2}
\title{Cluster the columns of Y into K groups using the NCut graph measure.}
\usage{
spawn2(X, K = 2, B = 30, N = 500, dist = "correlation", scale = T,
  q = 0.1, beta = 1, lambda = 1, epsilon = 0, sigma = 1)
}
\arguments{
\item{K}{is the number of clusters.}

\item{B}{is the number of iterations.}

\item{N}{is the number of samples per iterations.}

\item{scale}{equals TRUE if data Y is to be scaled with mean 0 and variance 1.}

\item{Y}{is a n x p matrix of p variables and n observations. The p columns of
Y will be clustered into K groups using NCut.}
}
\value{
A list with the final value of the objective function and
the clusters.
}
\description{
This function will output K clusters of the columns of Y.
}
\details{
The algorithm minimizes the NCut through the cross entropy method.
The clusters correspond to partitions that minimize this objective function.
}
\examples{
#This sets up the initial parameters for the simulation.
library(MASS)
n=200 #Sample size
B=30 #Number of iterations in the simulated annealing algorithm.
p=500 #Number of columns of Y.

S=matrix(0.2,p,p)
S[1:(p/2),(p/2+1):p]=0
S[(p/2+1):p,1:(p/2)]=0
S=S-diag(diag(S))+diag(p)
mu=rep(0,p)

W0=matrix(1,p,p)
W0[1:(p/2),1:(p/2)]=0
W0[(p/2+1):p,(p/2+1):p]=0
Denum=sum(W0)

Y=mvrnorm(n, mu, S)
#Our method
Res=NCut(Y,B=30,N=500,K=2,dist='gaussian',sigma=1)
Cx=Res[[2]]
f11=matrix(Cx[,1],p,1)
f12=matrix(Cx[,2],p,1)

errorL=sum((f11\%*\%t(f11))*W0)/Denum+sum((f12\%*\%t(f12))*W0)/Denum
#This is the true error of the clustering solution.
errorL
}
